{"version":3,"sources":["webpack:///src/components/x-table/components/edit-popover.vue","webpack:///src/components/x-table/src/components/x-table/index.vue","webpack:///src/components/x-table/index.vue"],"names":[],"mappings":"AAyEA,yBACE,UAAA,CCsHF,gBACA,UAAA,CACA,oBAAA,CACA,4BACA,CCKE,6CACE,WAAA,CACC,mDACC,aAAA,CAEF,2DACE,cAAA,CACA,eAAA,CACA,SAAA,CAIN,2BACE,iBAAA,CACA,4CACE,eAAA","file":"chunk-2bf2f6c5.df6b85da.css","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.form{\n  width: 100%;\n}\n","<template>\n  <div :class=\"$style.table\">\n    <el-table\n      ref=\"table\"\n      :data=\"fitTableData.row\"\n      border\n      @selection-change=\"fitTableData.meta.handleSelectionChange\"\n      style=\"width: 100%\">\n\n      <el-table-column\n        v-if=\"fitTableData.meta.selection\"\n        align='center'\n        type=\"selection\"\n        width=\"55\">\n      </el-table-column>\n\n      <el-table-column\n        align='center'\n        width=\"55\"\n        label=\"展开\"\n        type=\"expand\"\n        v-if=\"fitTableData.meta.expand.eswitch\">\n        <template slot-scope=\"props\">\n\n          <el-form\n            v-if=\"fitTableData.meta.expand.expandType ==='form'\"\n            label-position=\"left\"\n            inline\n            :class=\"$style['table-expand']\">\n            <el-form-item\n              :label=\"item.label\" v-for=\"(item) in expandFitTableDataColumn\"\n              :key=\"item.prop\">\n              <span>{{ props.row[item.prop] || '--' }}</span>\n            </el-form-item>\n          </el-form>\n\n          <div v-if=\"fitTableData.meta.expand.expandType ==='table'\">\n            <!-- 递归组件 -->\n            <x-table :tableData=\"props.row.expandTableData\"/>\n          </div>\n\n        </template>\n      </el-table-column>\n\n      <template v-for=\"(item) in fitTableDataColumn\" >\n        <el-table-column\n          :fixed='item.fixed'\n          :key=\"item.prop\"\n          :label=\"item.label\"\n          :width=\"item.width || 'auto'\"\n          :align=\"item.align || 'center'\"\n          min-width=\"180\">\n          <template slot-scope=\"scope\" >\n            <div v-if=\"item.components\" :key=\"JSON.stringify(scope.row)\">\n              <!-- 用组件渲染 -->\n              <component\n                :row=\"scope.row\"\n                :column=\"item\"\n                v-bind:is=\"item.components.key\">\n              </component>\n            </div>\n            <div v-else>\n              <!-- 没传入组件默认渲染 -->\n              <span v-if=\"item.format\">{{item.format(scope.row)}}</span>\n              <span v-else>{{scope.row[item.prop] || '--'}}</span>\n            </div>\n          </template>\n        </el-table-column>\n      </template>\n\n      <el-table-column\n        v-if=\"fitTableData.operation && fitTableData.operation.length\"\n        fixed=\"right\"\n        align=\"center\"\n        label=\"操作\"\n        width=\"60\">\n        <template slot-scope=\"scope\">\n          <el-popover\n            placement=\"left\"\n            trigger=\"click\">\n            <div :class=\"$style['operation-but']\">\n              <div :class=\"$style.but\" v-for=\"(item, index) in fitTableData.operation\" :key=\"index\">\n                <el-button\n                  :disabled='item.disabledFunc ? item.disabledFunc(scope.row) : false'\n                  @click=\"item.func(scope.row)\"\n                  size=\"mini\"\n                  :type=\"item.type || 'primary'\"\n                  plain>\n                  {{item.label}}\n                </el-button>\n              </div>\n            </div>\n            <i class=\"el-icon-more\" slot=\"reference\"></i>\n          </el-popover>\n        </template>\n      </el-table-column>\n\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash';\nimport { getPropObject, getPropBoolean } from 'lib/vue-prop';\nimport Sortable from 'sortablejs';\nimport editPopover from './components/edit-popover.vue';\nimport xSwitch from './components/x-switch.vue';\n\nexport default {\n  name: 'xTable',\n  props: {\n    tableData: getPropObject(),\n    isSort: getPropBoolean(false),\n  },\n  components: {\n    editPopover,\n    xSwitch,\n  },\n  data() {\n    return {\n      sortable: null,\n    };\n  },\n  mounted() {\n    this.init();\n  },\n  methods: {\n    init() {\n      if (this.isSort) {\n        this.$nextTick(() => {\n          this.setSort();\n        });\n      }\n    },\n    setSort() {\n      const el = this.$refs.table.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0];\n      this.sortable = Sortable.create(el, {\n        ghostClass: 'sortable-ghost',\n        setData(dataTransfer) {\n          // to avoid Firefox bug\n          // Detail see : https://github.com/RubaXa/Sortable/issues/1012\n          dataTransfer.setData('Text', '');\n        },\n        onEnd: (evt) => {\n          this.$emit('tableSort', evt);\n        },\n      });\n    },\n  },\n  computed: {\n    fitTableData() {\n      const fit = {\n        column: [],\n        row: [],\n        operation: [],\n        meta: {\n          selection: false,\n          handleSelectionChange: () => {},\n          // 如果expandType为form，则是省略展示，用num处理。如果expandType为table，则是表格展示，用row里面的expandTableData展示。\n          expand: {\n            eswitch: false, // 折叠展示\n            num: 0,\n            expandType: 'form',\n          },\n        },\n      };\n      _.merge(fit, this.tableData);\n      return fit;\n    },\n    fitTableDataColumn() {\n      const { eswitch, expandType, num } = this.fitTableData.meta.expand;\n      if (eswitch) {\n        if (expandType === 'form') {\n          return this.fitTableData.column.slice(0, num);\n        }\n      }\n      return this.fitTableData.column;\n    },\n    expandFitTableDataColumn() {\n      const { eswitch, expandType, num } = this.fitTableData.meta.expand;\n      if (eswitch) {\n        if (expandType === 'form') {\n          return this.fitTableData.column.slice(num);\n        }\n      }\n      return [];\n    },\n  },\n};\n</script>\n\n<style>\n.sortable-ghost{\n  opacity: .8;\n  color: #fff!important;\n  background: #052644!important;\n}\n</style>\n\n<style lang=\"scss\" module>\n.table{\n  .table-expand{\n    font-size: 0;\n     label {\n      color: #99a9bf;\n    }\n    :global(.el-form-item){\n      margin-right: 0;\n      margin-bottom: 0;\n      width: 50%;\n    }\n  }\n}\n.operation-but{\n  text-align: center;\n  .but{\n    margin: 8px auto;\n  }\n}\n</style>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.table{\n  .table-expand{\n    font-size: 0;\n     label {\n      color: #99a9bf;\n    }\n    :global(.el-form-item){\n      margin-right: 0;\n      margin-bottom: 0;\n      width: 50%;\n    }\n  }\n}\n.operation-but{\n  text-align: center;\n  .but{\n    margin: 8px auto;\n  }\n}\n"]}